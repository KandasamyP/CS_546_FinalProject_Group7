const mongoCollections = require("../config/mongoCollections");
const petAdopter = mongoCollections.petAdopter;
const shelterAndRescue = mongoCollections.shelterAndRescue;
var ObjectID = require("mongodb").ObjectID;

const exportedMethods = {
  async addSr(srData) {
    try {
      if (srData.profilePicture === undefined) {
        throw {
          status: 400,
          error:
            "Profile Picture public URL not passed - Generated by '/data/getAPetApi.js'.",
        };
      }

      if (srData.name === undefined) {
        throw {
          status: 400,
          error:
            "Shelter/Rescue name not passed - Generated by '/data/getAPetApi.js'.",
        };
      }

      if (srData.email === undefined) {
        throw {
          status: 400,
          error: "E-Mail not passed - Generated by '/data/getAPetApi.js'.",
        };
      }

      if (srData.password === undefined) {
        throw {
          status: 400,
          error: "Password not passed - Generated by '/data/getAPetApi.js'.",
        };
      }

      if (srData.state === undefined) {
        throw {
          status: 400,
          error:
            "Location State not passed - Generated by '/data/getAPetApi.js'.",
        };
      }

      if (srData.city === undefined) {
        throw {
          status: 400,
          error:
            "Location City not passed - Generated by '/data/getAPetApi.js'.",
        };
      }

      if (srData.biography === undefined) {
        throw {
          status: 400,
          error: "Biography not passed - Generated by '/data/getAPetApi.js'.",
        };
      }

      if (srData.phoneNumber === undefined) {
        throw {
          status: 400,
          error:
            "Phone Number not passed - Generated by '/data/getAPetApi.js'.",
        };
      }

      if (srData.website === undefined) {
        throw {
          status: 400,
          error: "Website URL not passed - Generated by '/data/getAPetApi.js'.",
        };
      }

      if (srData.socialMedia === undefined) {
        throw {
          status: 400,
          error:
            "Social Media URL not passed - Generated by '/data/getAPetApi.js'.",
        };
      }
    } catch (e) {
      throw { status: e.status, error: e.error };
    }

    srData.availablePets = [];
    srData.adoptedPets = [];
    srData.reviews = [];
    srData.websiteFeedbackGiven = [];
    srData.location = {
      country: srData.country,
      state: srData.state,
      city: srData.city,
    };

    delete srData.country;
    delete srData.state;
    delete srData.city;

    try {
      const shelterAndRescueCollection = await shelterAndRescue();

      const newInsertInformation = await shelterAndRescueCollection.insertOne(
        srData
      );
      if (newInsertInformation.insertedCount === 0)
        throw {
          status: 500,
          error:
            "Failed to sign up user to DB - Generated by '/data/books.js'.",
        };

      return srData;
    } catch (e) {
      throw { status: e.status, error: e.error };
    }
  },

  async addPoPa(poPaData) {
    try {
      if (poPaData.profilePicture === undefined) {
        throw {
          status: 400,
          error:
            "Profile Picture public URL not passed - Generated by '/data/getAPetApi.js'.",
        };
      }

      if (poPaData.fname === undefined) {
        throw {
          status: 400,
          error: "First name not passed - Generated by '/data/getAPetApi.js'.",
        };
      }

      if (poPaData.lname === undefined) {
        throw {
          status: 400,
          error: "Last name not passed - Generated by '/data/getAPetApi.js'.",
        };
      }

      if (poPaData.email === undefined) {
        throw {
          status: 400,
          error: "E-Mail not passed - Generated by '/data/getAPetApi.js'.",
        };
      }

      if (poPaData.password === undefined) {
        throw {
          status: 400,
          error: "Password not passed - Generated by '/data/getAPetApi.js'.",
        };
      }

      if (poPaData.phoneNumber === undefined) {
        throw {
          status: 400,
          error:
            "Phone Number not passed - Generated by '/data/getAPetApi.js'.",
        };
      }
      if (poPaData.zipCode === undefined) {
        throw {
          status: 400,
          error: "Zip Code not passed - Generated by '/data/getAPetApi.js'.",
        };
      }

      if (poPaData.biography === undefined) {
        throw {
          status: 400,
          error: "Biography not passed - Generated by '/data/getAPetApi.js'.",
        };
      }

      if (poPaData.dateOfBirth === undefined) {
        throw {
          status: 400,
          error: "DOB not passed - Generated by '/data/getAPetApi.js'.",
        };
      }
    } catch (e) {
      throw { status: e.status, error: e.error };
    }

    poPaData.fullName = {
      fname: poPaData.fname,
      lname: poPaData.lname,
    };
    poPaData.favoritedPets = [];
    poPaData.websiteFeedbackGiven = [];
    poPaData.shelterReviewsGiven = [];
    poPaData.reportedPosts = [];
    poPaData.donatedItems = [];
    poPaData.isVolunteerCandidate = false;

    delete poPaData.fname;
    delete poPaData.lname;

    try {
      const petOwnerCollection = await petAdopter();

      const newInsertInformation = await petOwnerCollection.insertOne(poPaData);
      if (newInsertInformation.insertedCount === 0)
        throw {
          status: 500,
          error:
            "Failed to sign up user to DB - Generated by '/data/books.js'.",
        };

      return poPaData;
    } catch (e) {
      throw { status: e.status, error: e.error };
    }
  },
};

module.exports = exportedMethods;
