const mongoCollections = require("../config/mongoCollections");
const petAdopter = mongoCollections.petAdopter;
const shelterAndRescue = mongoCollections.shelterAndRescue;
var ObjectID = require("mongodb").ObjectID;

const exportedMethods = {
  async addSr(SrData) {
    SrData.availablePets = [];
    SrData.adoptedPets = [];
    SrData.reviews = [];
    SrData.websiteFeedbackGiven = [];

    try {
      const shelterAndRescueCollection = await shelterAndRescue();

      const newInsertInformation = await shelterAndRescueCollection.insertOne(
        SrData
      );
      if (newInsertInformation.insertedCount === 0)
        throw {
          status: 500,
          error:
            "Failed to sign up user to DB - Generated by '/data/books.js'.",
        };

      return SrData;
    } catch (e) {
      throw { status: e.status, error: e.error };
    }
  },

  async addPetOwner(petOwnerData) {
    petOwnerData.fullName = {
      fname: petOwnerData.fname,
      lname: petOwnerData.lname,
    };
    petOwnerData.favoritedPets = [];
    petOwnerData.websiteFeedbackGiven = [];
    petOwnerData.shelterReviewsGiven = [];
    petOwnerData.reportedPosts = [];
    petOwnerData.donatedItems = [];
    petOwnerData.isVolunteerCandidate = false;

    delete petOwnerData.fname;
    delete petOwnerData.lname;

    try {
      const petOwnerCollection = await petAdopter();

      const newInsertInformation = await petOwnerCollection.insertOne(
        petOwnerData
      );
      if (newInsertInformation.insertedCount === 0)
        throw {
          status: 500,
          error:
            "Failed to sign up user to DB - Generated by '/data/books.js'.",
        };

      return petOwnerData;
    } catch (e) {
      throw { status: e.status, error: e.error };
    }
  },
};

module.exports = exportedMethods;
